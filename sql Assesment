create database  LMS_DB;
use LMS_DB;

create table LMS_MEMBERS(
	member_id varchar(10) primary key,
	member_name varchar(30),
	city varchar(20),
	date_register date,
	date_expire date,
	membership_status varchar(15)
);

insert into LMS_MEMBERS values('LM001','AMIT','CHENNAI','2012-02-12','2013-02-11','Temporary');
insert into LMS_MEMBERS values('LM002','ABDHUL','DELHI','2012-04-10','2013-04-09','Temporary');
insert into LMS_MEMBERS values('LM003','GAYAN','CHENNAI','2012-05-13','2013-05-12','Permanent');
insert into LMS_MEMBERS values('LM004','RADHA','CHENNAI','2012-04-22','2013-04-21','Temporary');
insert into LMS_MEMBERS values('LM005','GURU','BANGALORE','2012-03-30','2013-05-16','Temporary');
insert into LMS_MEMBERS values('LM006','MOHAN','CHENNAI','2012-04-12','2013-05-16','Temporary');

select * from LMS_MEMBERS;


create table LMS_SUPPLIERS_DETAILS(
	supplier_id varchar(3) primary key,
	supplier_name varchar(30),
	supplier_address varchar(50),
	contact int,
	email varchar(15)
);

insert into LMS_SUPPLIERS_DETAILS values('S01','SINGAPORE SHOPPEE','CHENNAI',98941235,'sing@gmail.com');
insert into LMS_SUPPLIERS_DETAILS values('S02','JK Stores','MUMBAI',99401234,'jks@yahoo.com');
insert into LMS_SUPPLIERS_DETAILS values('S03','ROSE BOOK STORE','TRIVANDRAM',94444112,'rose@gmail.com');
insert into LMS_SUPPLIERS_DETAILS values('S04','KAVARI STORE','DELHI',86300014,'kavi@redif.com');
insert into LMS_SUPPLIERS_DETAILS values('S05','EINSTEN BOOK GALLARY','US',95420000,'eingal@aol.com');
insert into LMS_SUPPLIERS_DETAILS values('S06','AKBAR STORE','MUMBAI',78556231,'akbakst@aol.com');

select * from LMS_SUPPLIERS_DETAILS;


create table LMS_FINE_DETAILS(
	fine_range varchar(3) primary key,
	fine_amount numeric(10,2)
);

insert into LMS_FINE_DETAILS values('R0',0.00);
insert into LMS_FINE_DETAILS values('R1',20.00);
insert into LMS_FINE_DETAILS values('R2',50.00);
insert into LMS_FINE_DETAILS values('R3',75.00);
insert into LMS_FINE_DETAILS values('R4',100.00);
insert into LMS_FINE_DETAILS values('R5',150.00);
insert into LMS_FINE_DETAILS values('R6',2000.00);

select * from LMS_FINE_DETAILS;


create  table LMS_BOOK_DETAILS(
	book_code varchar(10) primary key,
	book_title varchar(50),
	category varchar(15),
	author varchar(30),
	publication varchar(30),
	publish_date date,
	book_edition int,
	price numeric(8,2),
	rack_num varchar(3),
	date_arrival date,
	supplier_id varchar(3)
);

insert into LMS_BOOK_DETAILS values('BL000010','Java ForvDummies','Java','Paul j.Deitel','Prentice Hall','1999-12-10',6,575.00,'A1','2011-05-10','S01');
insert into LMS_BOOK_DETAILS values('BL000002','Java:The Complete R..','Java','Herbert Schildt','Tata Mcgraw Hill','2011-10-10',5,755.00,'A1','2011-05-10','S03');
insert into LMS_BOOK_DETAILS values('BL000003','Java How To Do Prog..','Java','Paul j.Deitel','Prentice Hall','1999-05-10',6,600.00,'A1','2012-05-10','S01');
insert into LMS_BOOK_DETAILS values('BL000004','Java:The Complete R..','Java','Herbert Schildt','Tata Mcgraw Hill','2011-10-10',5,750.00,'A1','2012-05-11','S01');
insert into LMS_BOOK_DETAILS values('BL000005','Java How To Do Prog..','Java','Paul j.Deitel','Prentice Hall','1999-12-10',6,600.00,'A1','2012-05-11','S01');
insert into LMS_BOOK_DETAILS values('BL000006','Java:The Complete R..','Java','Herbert Schildt','Tata Mcgraw Hill','2011-10-10',5,750.00,'A1','2012-05-12','S03');
insert into LMS_BOOK_DETAILS values('BL000007','Let Us C','C','Yashavant Kanetkar','BPB Publications','2010-12-11',9,500.00,'A3','2010-11-03','S03');
insert into LMS_BOOK_DETAILS values('BL000008','Let Us C','C','Yashavant Kanetkar','BPB Publications','2010-05-12',9,500.00,'A3','2011-08-09','S04');
insert into LMS_BOOK_DETAILS values('BL000009','Let Us C#','C','Yashavant Kanetkar','BPB Publications','2010-05-12',9,550.00,'A3','2011-08-09','S04');
insert into LMS_BOOK_DETAILS values('BL000011','Let Us C++','C','Yashavant Kanetkar','BPB Publications','2010-05-12',9,650.00,'A3','2011-08-09','S04');

select * from LMS_BOOK_DETAILS;

create table LMS_BOOK_ISSUE(
	book_issue_no int primary key,
	member_id varchar(10),
	book_code varchar(10),
	date_issue date,
	date_return date,
	date_returned date,
	fine_range varchar(3)
);

insert into LMS_BOOK_ISSUE values(1,'LM001','BL000010','2012-05-01','2012-05-16','2012-05-16','R0');
insert into LMS_BOOK_ISSUE values(2,'LM002','BL000002','2012-05-01','2012-05-06','2012-05-16','R2');
insert into LMS_BOOK_ISSUE values(3,'LM003','BL000007','2012-04-01','2012-04-16','2012-04-20','R1');
insert into LMS_BOOK_ISSUE values(4,'LM004','BL000005','2012-04-01','2012-04-16','2012-04-20','R1');
insert into LMS_BOOK_ISSUE values(5,'LM005','BL000008','2012-03-30','2012-04-15','2012-04-20','R1');
insert into LMS_BOOK_ISSUE values(6,'LM005','BL000008','2012-04-20','2012-05-05','2012-05-05','R0');
insert into LMS_BOOK_ISSUE values(7,'LM003','BL000007','2012-04-22','2012-05-07','2012-05-25','R4');

select * from LMS_BOOK_ISSUE;

--queries
--(1) Write a command to describe the structure of the table, LMS_BOOK_DETAILS.

--(2)
select * from LMS_FINE_DETAILS;

--(3) 
create function udf_Names_By_City(@city varchar(20))
Returns table
return select member_name,city from LMS_MEMBERS where city=@city;

select * from Names_By_City('CHENNAI');

--(4) 
create view Status_Permanent as
select member_id,member_name,city,membership_status from LMS_MEMBERS where membership_status='Permanent';

select * from Status_Permanent;

--(5)
select LM.member_id,LM.member_name,LB.book_issue_no,LB.date_issue from LMS_MEMBERS LM join LMS_BOOK_ISSUE LB on LM.member_id=LB.member_id where LB.book_code='BL000002';

--(6) 
create view pattern as
select book_code,book_title,author from LMS_BOOK_DETAILS where author like 'P%';

select * from pattern;

--(7)
select count('category') as NO_OF_BOOKS,category from LMS_BOOK_DETAILS group by category having category='Java'

--(8)
select count('category') as NO_OF_BOOKS,category from LMS_BOOK_DETAILS group by category;

--(9) 
create function Publication_Details(@publication varchar(20))
Returns table
return select count(*) as NO_OF_BOOKS from LMS_BOOK_DETAILS where publication=@publication;

select * from Publication_Details('Prentice Hall');


--(10) 
select LB.book_code, LB.book_title from LMS_BOOK_DETAILS LB join LMS_BOOK_ISSUE LI on LB.book_code=LI.book_code where LI.date_issue in ('2012-04-01');

--(11) 
select member_id,member_name,date_register,date_expire from LMS_MEMBERS where date_expire < '2013-04-01';

--(12) 
create function udf_DisplayDetails_BeforeMarchAndTemporary(@membership varchar(20),@date date)
Returns table
return select member_id,member_name,date_register,membership_status from LMS_MEMBERS where membership_status=@membership and date_register<@date;

drop function udf_DisplayDetails_BeforeMarchAndTemporary;
select * from udf_DisplayDetails_BeforeMarchAndTemporary('Temporary','2012-03-01');

--(13) 
select member_id,member_name from LMS_MEMBERS where city='CHENNAI' or city='DELHI';

--(14) 
select CONCAT(book_title,'_is_written_by_', author) as book_and_author from LMS_BOOK_DETAILS;

--(15) 
select avg(price) as AVERAGEPRICE from LMS_BOOK_DETAILS where category='Java';

--(16) 
create view Email_users as
select supplier_id,supplier_name,email from LMS_SUPPLIERS_DETAILS where email like '%gmail.com';

select * from Email_users;


--(17) Write a query to display the supplier id, supplier name and contact details. Contact details can be either phone number or email or address with alias name “CONTACTDETAILS”. If phone number is 
        --null then display email, if email is also null then display the address of the supplier. Hint: Use Coalesce function.


--(18) Write a query to display the member id, member name of the members, book code and book title of the books taken by them.
select LM.member_id,LM.member_name,LB.book_code,LB.book_title from LMS_MEMBERS LM join LMS_BOOK_DETAILS LB on LM.member_id=LB.book_title


--(19) 
select LM.member_id,LM.member_name,LF.fine_range,LF.fine_amount from LMS_MEMBERS LM join LMS_BOOK_ISSUE LB on LM.member_id=LB.member_id join LMS_FINE_DETAILS LF on LB.fine_range=LF.fine_range where fine_amount<100;


--(20)
create proc Rack_Num_InOrder
@rackNum varchar(20)
as
begin
select book_code,book_title,rack_num from LMS_BOOK_DETAILS where rack_num=@rackNum order by book_title;
end

exec Rack_Num_InOrder 'A1';

--(21) 
select LM.member_id,LM.member_name,LM.date_register from LMS_MEMBERS LM join LMS_BOOK_ISSUE LB on LM.member_id=LB.member_id where LB.book_issue_no is null;

--(22) Write a query to display the member id and member name of the members who has not paid any fine in the year 2012.
select LM.member_id,LM.member_name from LMS_MEMBERS LM  

--(23) 
select rack_num,count(book_code) as NOOFBOOKS from LMS_BOOK_DETAILS group by rack_num order by rack_num;


--(24) Write a query to display book issue number, member name, date or registration, date of expiry, book title, category author, price, date of issue, date of return, actual returned date, issue status, fine 
---amount.
select book_code from LMS_BOOK_ISSUE


--(26)
select * from LMS_SUPPLIERS_DETAILS where supplier_id in ('S01','S02','S03');

--select * from LMS_SUPPLIERS_DETAILS where ROW_NUMBER<=3;


--(27) 
select * from LMS_SUPPLIERS_DETAILS where supplier_id not in ('S01','S02','S03');


--(28)
exec sp_rename 'LMS_MEMBERS','LMS_MEMBERS_DETAILS';
select * from LMS_MEMBERS_DETAILS;


--(29)
create proc  Delete_LMS_FINE_DETAILS
as
begin 
delete from LMS_FINE_DETAILS
End

exec Delete_LMS_FINE_DETAILS;
select * from LMS_FINE_DETAILS;

--(30) Write a query to select all the name of the books. [Without Asterisk (*) Operator
select book_title from LMS_BOOK_DETAILS

--trigger
create trigger Cannot_drop
on database
for drop_table
as
begin
rollback
print 'Cannot drop table'
end

drop table LMS_BOOK_DETAILS;
